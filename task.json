{
  "project": "Coffeechat",
  "description": "Private coffee chat booking system - UI/UX improvements",
  "epics": [
    {
      "id": "epic-1",
      "title": "[Epic] User Booking Flow Optimization",
      "description": "Critical UX improvements for the user-facing booking workflow",
      "priority": 1,
      "labels": ["Epic", "P0", "User Flow"],
      "parent_issues": [
        {
          "id": "parent-1",
          "title": "[Parent] Booking Flow Restructure",
          "description": "Restructure booking flow to collect information at optimal stages",
          "priority": 1,
          "labels": ["Parent", "P0", "Breaking Change"],
          "sub_issues": [
            {
              "id": "sub-1-1",
              "title": "Create progress indicator component",
              "description": "Add stepper component showing: 1/4 정보입력 → 2/4 이메일인증 → 3/4 시간선택 → 4/4 완료",
              "priority": 1,
              "labels": ["Frontend", "Component"],
              "affected_files": [
                "templates/base.html",
                "static/css/progress.css",
                "static/js/progress.js"
              ],
              "checklist": [
                "Create progress stepper HTML component",
                "Add CSS styling with active/inactive states",
                "Integrate stepper into all workflow pages",
                "Test responsive design on mobile",
                "Add accessibility attributes (aria-current)"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-1-2",
              "title": "Refactor book.html - email only collection",
              "description": "Modify book.html to only collect email for verification, remove name/phone/purpose fields",
              "priority": 1,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/book.html",
                "app.py (route: /book/<token>)"
              ],
              "checklist": [
                "Remove name, phone, purpose input fields from book.html",
                "Keep only email input field",
                "Update form validation to email-only",
                "Modify /book/<token> POST handler to accept only email",
                "Update session storage to save only email at this stage",
                "Test edge cases (empty email, invalid format)"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-1-3",
              "title": "Create booking_form.html for post-calendar info collection",
              "description": "New page to collect name, phone, purpose AFTER time selection",
              "priority": 1,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/booking_form.html (NEW)",
                "app.py (NEW route: /book/<token>/form)"
              ],
              "checklist": [
                "Create booking_form.html template",
                "Add fields: name, phone, purpose",
                "Implement form validation (client + server side)",
                "Create /book/<token>/form route",
                "Retrieve selected_slot from session",
                "Save complete booking to database",
                "Redirect to booking_success.html",
                "Add progress indicator (step 4/4)"
              ],
              "estimated_hours": 5
            },
            {
              "id": "sub-1-4",
              "title": "Update book_calendar.html - redirect to booking_form",
              "description": "After time selection, redirect to booking_form.html instead of immediate booking",
              "priority": 1,
              "labels": ["Backend"],
              "affected_files": [
                "templates/book_calendar.html",
                "app.py (route: /book/<token>/calendar)"
              ],
              "checklist": [
                "Modify POST handler in /book/<token>/calendar",
                "Save selected_slot to session",
                "Redirect to /book/<token>/form instead of creating booking",
                "Remove booking creation logic from calendar route",
                "Update progress indicator (step 3/4)"
              ],
              "estimated_hours": 3
            }
          ]
        },
        {
          "id": "parent-2",
          "title": "[Parent] Email Verification Experience",
          "description": "Improve email verification UX with resend, timer, auto-focus",
          "priority": 1,
          "labels": ["Parent", "P1", "Authentication"],
          "sub_issues": [
            {
              "id": "sub-2-1",
              "title": "Add email code resend functionality",
              "description": "Add resend button with 30s cooldown, invalidate old codes",
              "priority": 1,
              "labels": ["Backend", "Frontend"],
              "affected_files": [
                "templates/verify_email.html",
                "app.py (NEW route: /resend-verification)",
                "email_utils.py"
              ],
              "checklist": [
                "Add 'Resend Code' button to verify_email.html",
                "Implement 30s cooldown timer (frontend)",
                "Create /resend-verification endpoint",
                "Invalidate previous verification codes",
                "Generate new code and send email",
                "Track resend attempts (max 3 per session)",
                "Add rate limiting"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-2-2",
              "title": "Add 5-minute expiry countdown timer",
              "description": "Show live countdown timer for verification code expiry",
              "priority": 1,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/verify_email.html"
              ],
              "checklist": [
                "Add countdown timer display",
                "Calculate expiry time (code_sent_at + 5 minutes)",
                "Update every second with JavaScript",
                "Show visual warning at 1 minute remaining",
                "Disable form submit when expired",
                "Show resend prompt on expiry"
              ],
              "estimated_hours": 2
            },
            {
              "id": "sub-2-3",
              "title": "Add auto-focus and auto-submit for verification code",
              "description": "Auto-focus input on load, auto-submit on 6 digits",
              "priority": 1,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/verify_email.html"
              ],
              "checklist": [
                "Add autofocus attribute to code input",
                "Implement auto-submit on 6-digit entry",
                "Add clipboard paste detection for 6-digit codes",
                "Test on mobile Safari, Chrome, Firefox",
                "Add loading state during submission"
              ],
              "estimated_hours": 2
            }
          ]
        }
      ]
    },
    {
      "id": "epic-2",
      "title": "[Epic] Error Handling & Recovery",
      "description": "Improve error recovery mechanisms and user feedback",
      "priority": 1,
      "labels": ["Epic", "P1", "Reliability"],
      "parent_issues": [
        {
          "id": "parent-3",
          "title": "[Parent] Session & Progress Management",
          "description": "Implement session-based progress saving and recovery",
          "priority": 1,
          "labels": ["Parent", "P1", "Backend"],
          "sub_issues": [
            {
              "id": "sub-3-1",
              "title": "Implement session-based progress tracking",
              "description": "Save booking progress in session for recovery",
              "priority": 1,
              "labels": ["Backend"],
              "affected_files": [
                "app.py (all /book/* routes)"
              ],
              "checklist": [
                "Define session schema for booking_progress",
                "Save progress at each step (email verified, time selected, etc)",
                "Implement progress retrieval on page load",
                "Add progress validation (check step dependencies)",
                "Test session expiry handling"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-3-2",
              "title": "Add 'Resume Booking' functionality",
              "description": "Allow users to resume from last saved progress",
              "priority": 1,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/book.html",
                "app.py"
              ],
              "checklist": [
                "Detect existing progress on /book/<token>",
                "Show resume prompt UI",
                "Implement 'Resume' button (redirect to last step)",
                "Implement 'Start Over' button (clear session)",
                "Test recovery from each step",
                "Handle expired progress gracefully"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-3-3",
              "title": "Activity-based link expiry extension",
              "description": "Extend link expiry when user is active",
              "priority": 2,
              "labels": ["Backend"],
              "affected_files": [
                "app.py (NEW route: /extend-timer)",
                "templates/book_calendar.html"
              ],
              "checklist": [
                "Track last user activity timestamp",
                "Create /extend-timer AJAX endpoint",
                "Add activity listeners (click, input, scroll)",
                "Extend expires_at by +10 minutes on activity",
                "Limit max extension (e.g., 2 hours total)",
                "Test with expired links"
              ],
              "estimated_hours": 3
            }
          ]
        },
        {
          "id": "parent-4",
          "title": "[Parent] Error Messaging Improvements",
          "description": "Provide clear, actionable error messages",
          "priority": 2,
          "labels": ["Parent", "P2", "UX"],
          "sub_issues": [
            {
              "id": "sub-4-1",
              "title": "Create error message templates",
              "description": "Standardize error messages with clear recovery steps",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/error_expired.html (NEW)",
                "templates/error_invalid.html (NEW)",
                "templates/error_generic.html (NEW)"
              ],
              "checklist": [
                "Design error page template structure",
                "Add error icon/illustration",
                "Include specific problem description",
                "Add recovery steps (bullet points)",
                "Add action buttons (Retry, Go Home, Contact Support)",
                "Test all error scenarios"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-4-2",
              "title": "Replace generic error messages",
              "description": "Update all error handlers with specific messages",
              "priority": 2,
              "labels": ["Backend"],
              "affected_files": [
                "app.py (all routes)"
              ],
              "checklist": [
                "Audit all error messages in app.py",
                "Replace generic messages with specific ones",
                "Add recovery instructions",
                "Include error codes for debugging",
                "Test each error path",
                "Update error logging"
              ],
              "estimated_hours": 4
            }
          ]
        }
      ]
    },
    {
      "id": "epic-3",
      "title": "[Epic] Mobile Experience",
      "description": "Optimize UI/UX for mobile devices",
      "priority": 1,
      "labels": ["Epic", "P1", "Mobile"],
      "parent_issues": [
        {
          "id": "parent-5",
          "title": "[Parent] Mobile Calendar Optimization",
          "description": "Improve calendar UX for mobile devices",
          "priority": 1,
          "labels": ["Parent", "P1", "Mobile"],
          "sub_issues": [
            {
              "id": "sub-5-1",
              "title": "Create mobile-optimized calendar view",
              "description": "Add list view alternative for mobile devices",
              "priority": 1,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book_calendar.html",
                "static/js/mobile-calendar.js (NEW)",
                "static/css/mobile.css (NEW)"
              ],
              "checklist": [
                "Detect mobile device (viewport < 768px)",
                "Create list view for available dates",
                "Implement date selection UI",
                "Add swipe gestures for month navigation",
                "Ensure 44x44px minimum touch targets",
                "Test on iOS Safari, Chrome Android"
              ],
              "estimated_hours": 8
            },
            {
              "id": "sub-5-2",
              "title": "Convert modal to bottom sheet on mobile",
              "description": "Replace modal popup with bottom sheet for time selection",
              "priority": 1,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book_calendar.html",
                "static/css/mobile.css"
              ],
              "checklist": [
                "Add bottom sheet CSS styles",
                "Implement slide-up animation",
                "Add drag-to-close gesture",
                "Ensure proper height (max 80vh)",
                "Test accessibility (focus trap)",
                "Test on various mobile browsers"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-5-3",
              "title": "Add visual feedback for consecutive selection",
              "description": "Highlight selected slots and show connection on mobile",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book_calendar.html",
                "static/css/mobile.css"
              ],
              "checklist": [
                "Add visual connector between consecutive slots",
                "Highlight selected range with gradient",
                "Show selection count badge",
                "Add haptic feedback on selection (if supported)",
                "Test selection/deselection flows"
              ],
              "estimated_hours": 3
            }
          ]
        }
      ]
    },
    {
      "id": "epic-4",
      "title": "[Epic] Feedback & Communication",
      "description": "Improve user feedback and success/failure messaging",
      "priority": 2,
      "labels": ["Epic", "P2", "UX"],
      "parent_issues": [
        {
          "id": "parent-6",
          "title": "[Parent] Success & Failure Feedback",
          "description": "Enhanced feedback for booking outcomes",
          "priority": 2,
          "labels": ["Parent", "P2", "Frontend"],
          "sub_issues": [
            {
              "id": "sub-6-1",
              "title": "Redesign booking success page",
              "description": "Show detailed booking info with next steps",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/booking_success.html",
                "static/css/success.css (NEW)"
              ],
              "checklist": [
                "Add success animation (checkmark)",
                "Display booking details (date, time, meet link)",
                "Show next steps checklist",
                "Add 'Add to Calendar' button",
                "Include confirmation email notice",
                "Test email delivery confirmation"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-6-2",
              "title": "Add loading states for async operations",
              "description": "Show spinners/skeleton screens during API calls",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book_calendar.html",
                "static/js/loading.js (NEW)"
              ],
              "checklist": [
                "Add loading spinner to submit buttons",
                "Disable buttons during submission",
                "Add skeleton screen for calendar loading",
                "Implement progress indicators for slow operations",
                "Test on slow network (throttling)"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-6-3",
              "title": "Create toast notification system",
              "description": "Add toast messages for async feedback",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "static/js/toast.js (NEW)",
                "static/css/toast.css (NEW)"
              ],
              "checklist": [
                "Create toast component (success, error, info)",
                "Implement auto-dismiss (3s)",
                "Add manual dismiss button",
                "Support stacking multiple toasts",
                "Test accessibility (aria-live)",
                "Add to key user actions"
              ],
              "estimated_hours": 4
            }
          ]
        },
        {
          "id": "parent-7",
          "title": "[Parent] Timer UX Improvements",
          "description": "Reduce timer anxiety and improve messaging",
          "priority": 2,
          "labels": ["Parent", "P2", "UX"],
          "sub_issues": [
            {
              "id": "sub-7-1",
              "title": "Remove timers from early steps",
              "description": "Remove countdown from book.html and verify_email.html",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book.html",
                "templates/verify_email.html"
              ],
              "checklist": [
                "Remove countdown timer HTML from book.html",
                "Remove countdown JavaScript from book.html",
                "Remove countdown from verify_email.html",
                "Test page loading without timer code"
              ],
              "estimated_hours": 1
            },
            {
              "id": "sub-7-2",
              "title": "Update calendar timer messaging",
              "description": "Change from countdown to friendly expiry notice",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/book_calendar.html"
              ],
              "checklist": [
                "Replace countdown with expiry datetime display",
                "Change alert style from warning to info",
                "Update wording to be less urgent",
                "Keep countdown only when < 5 minutes remain",
                "Test different expiry scenarios"
              ],
              "estimated_hours": 2
            },
            {
              "id": "sub-7-3",
              "title": "Add graceful expiry handling",
              "description": "Show friendly message with new link request option",
              "priority": 2,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/link_expired.html (NEW)",
                "app.py"
              ],
              "checklist": [
                "Create link_expired.html template",
                "Add 'Request New Link' button",
                "Implement /request-new-link endpoint",
                "Send new link to user's email",
                "Track link request attempts",
                "Test expired link scenarios"
              ],
              "estimated_hours": 3
            }
          ]
        }
      ]
    },
    {
      "id": "epic-5",
      "title": "[Epic] Admin Efficiency",
      "description": "Improve admin workflow efficiency with bulk actions",
      "priority": 2,
      "labels": ["Epic", "P2", "Admin"],
      "parent_issues": [
        {
          "id": "parent-8",
          "title": "[Parent] Bulk Operations",
          "description": "Add bulk approve/reject functionality",
          "priority": 2,
          "labels": ["Parent", "P2", "Admin"],
          "sub_issues": [
            {
              "id": "sub-8-1",
              "title": "Add checkbox multi-select to admin table",
              "description": "Allow selecting multiple bookings with checkboxes",
              "priority": 2,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/admin.html",
                "static/js/bulk-actions.js (NEW)"
              ],
              "checklist": [
                "Add checkbox column to bookings table",
                "Implement 'Select All' checkbox in header",
                "Track selected items in JavaScript",
                "Show selected count indicator",
                "Persist selection across filters",
                "Test selection/deselection"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-8-2",
              "title": "Create bulk approve/reject endpoints",
              "description": "Backend API for bulk operations",
              "priority": 2,
              "labels": ["Backend"],
              "affected_files": [
                "app.py (NEW routes: /admin/bulk-approve, /admin/bulk-reject)"
              ],
              "checklist": [
                "Create /admin/bulk-approve endpoint",
                "Create /admin/bulk-reject endpoint",
                "Accept list of booking IDs",
                "Process each booking (create meets, send emails)",
                "Return success/failure count",
                "Add transaction handling",
                "Test with multiple bookings"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-8-3",
              "title": "Add keyboard shortcuts for admin",
              "description": "Implement J/K/X/A/R keyboard navigation",
              "priority": 3,
              "labels": ["Frontend"],
              "affected_files": [
                "templates/admin.html",
                "static/js/keyboard-shortcuts.js (NEW)"
              ],
              "checklist": [
                "Add keyboard event listeners",
                "J: Navigate down, K: Navigate up",
                "X: Toggle checkbox, A: Approve, R: Reject",
                "Show keyboard shortcut help tooltip",
                "Disable shortcuts in input fields",
                "Test on Mac/Windows"
              ],
              "estimated_hours": 4
            }
          ]
        }
      ]
    },
    {
      "id": "epic-6",
      "title": "[Epic] Security & Privacy",
      "description": "Enhance security for booking status queries",
      "priority": 2,
      "labels": ["Epic", "P2", "Security"],
      "parent_issues": [
        {
          "id": "parent-9",
          "title": "[Parent] Status Query Security",
          "description": "Add verification and rate limiting to status queries",
          "priority": 2,
          "labels": ["Parent", "P2", "Security"],
          "sub_issues": [
            {
              "id": "sub-9-1",
              "title": "Add email verification to status query",
              "description": "Require email + phone for status lookup",
              "priority": 2,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/status.html",
                "app.py (route: /status)"
              ],
              "checklist": [
                "Add email field to status form",
                "Validate email + phone combination",
                "Send verification code to email",
                "Create verification step",
                "Show status only after verification",
                "Test failed verification attempts"
              ],
              "estimated_hours": 4
            },
            {
              "id": "sub-9-2",
              "title": "Implement rate limiting for status queries",
              "description": "Limit status queries to 5 per hour per IP",
              "priority": 2,
              "labels": ["Backend"],
              "affected_files": [
                "app.py",
                "requirements.txt"
              ],
              "checklist": [
                "Install Flask-Limiter",
                "Add rate limiter to /status route",
                "Set limit: 5 per hour per IP",
                "Return 429 on rate limit exceeded",
                "Add clear error message",
                "Test rate limit enforcement"
              ],
              "estimated_hours": 2
            },
            {
              "id": "sub-9-3",
              "title": "Add CAPTCHA after failed attempts",
              "description": "Show CAPTCHA after 3 failed status queries",
              "priority": 3,
              "labels": ["Frontend", "Backend"],
              "affected_files": [
                "templates/status.html",
                "app.py"
              ],
              "checklist": [
                "Integrate reCAPTCHA v2",
                "Track failed attempts in session",
                "Show CAPTCHA after 3 failures",
                "Validate CAPTCHA server-side",
                "Reset counter on success",
                "Test CAPTCHA flow"
              ],
              "estimated_hours": 3
            }
          ]
        }
      ]
    },
    {
      "id": "epic-7",
      "title": "[Epic] Accessibility",
      "description": "WCAG 2.1 Level AA compliance",
      "priority": 3,
      "labels": ["Epic", "P3", "A11y"],
      "parent_issues": [
        {
          "id": "parent-10",
          "title": "[Parent] WCAG 2.1 AA Compliance",
          "description": "Implement accessibility improvements across all pages",
          "priority": 3,
          "labels": ["Parent", "P3", "A11y"],
          "sub_issues": [
            {
              "id": "sub-10-1",
              "title": "Add ARIA labels and landmarks",
              "description": "Add proper ARIA attributes to all interactive elements",
              "priority": 3,
              "labels": ["Frontend"],
              "affected_files": [
                "All template files"
              ],
              "checklist": [
                "Add aria-label to buttons without text",
                "Add role attributes to custom components",
                "Add aria-current to progress indicators",
                "Add aria-live for dynamic content",
                "Add aria-describedby for help text",
                "Validate with axe DevTools"
              ],
              "estimated_hours": 6
            },
            {
              "id": "sub-10-2",
              "title": "Implement keyboard navigation",
              "description": "Full keyboard support with Tab, Enter, Esc",
              "priority": 3,
              "labels": ["Frontend"],
              "affected_files": [
                "All template files",
                "static/js/keyboard-nav.js (NEW)"
              ],
              "checklist": [
                "Tab navigation through all interactive elements",
                "Enter to submit forms",
                "Esc to close modals",
                "Focus trap in modals",
                "Skip navigation links",
                "Test with keyboard only"
              ],
              "estimated_hours": 5
            },
            {
              "id": "sub-10-3",
              "title": "Fix color contrast issues",
              "description": "Ensure WCAG AA contrast ratios (4.5:1)",
              "priority": 3,
              "labels": ["Frontend"],
              "affected_files": [
                "All CSS files"
              ],
              "checklist": [
                "Audit all text colors with contrast checker",
                "Fix low-contrast text",
                "Update button colors if needed",
                "Test with color blindness simulators",
                "Validate with Lighthouse"
              ],
              "estimated_hours": 3
            },
            {
              "id": "sub-10-4",
              "title": "Screen reader testing and fixes",
              "description": "Test with NVDA/JAWS and fix issues",
              "priority": 3,
              "labels": ["Frontend"],
              "affected_files": [
                "All template files"
              ],
              "checklist": [
                "Test all pages with NVDA",
                "Test all pages with macOS VoiceOver",
                "Fix navigation issues",
                "Add descriptive text for screen readers only",
                "Test form error announcements",
                "Document screen reader instructions"
              ],
              "estimated_hours": 5
            }
          ]
        }
      ]
    }
  ],
  "summary": {
    "total_epics": 7,
    "total_parent_issues": 10,
    "total_sub_issues": 37,
    "total_estimated_hours": 117,
    "priorities": {
      "P0": 2,
      "P1": 3,
      "P2": 4,
      "P3": 1
    }
  }
}
