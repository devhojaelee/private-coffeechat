name: CI - Tests and Lint

on:
  push:
    branches:
      - main
      - 'feature/**'
      - 'integration-*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Python syntax check
        run: |
          python -m py_compile app.py
          python -m py_compile email_utils.py
          python -m py_compile calendar_utils.py

      - name: Run tests (if test files exist)
        run: |
          if [ -d "tests" ] || ls test_*.py 2>/dev/null | grep -q .; then
            pytest --cov=. --cov-report=xml --cov-report=term
          else
            echo "No tests found, skipping pytest"
          fi

      - name: Upload coverage to Codecov (optional)
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  lint:
    name: Code Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install linting tools
        run: |
          pip install flake8 pylint

      - name: Run flake8
        run: |
          # E501: line too long 무시
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run pylint (non-blocking)
        continue-on-error: true
        run: |
          pylint *.py --exit-zero
