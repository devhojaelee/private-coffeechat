name: Integration & Merge

on:
  workflow_dispatch:
    inputs:
      parent_issue_id:
        description: 'Linear Parent Issue ID (e.g., 100P-116)'
        required: true
        type: string
      auto_merge_to_main:
        description: 'Automatically merge to main after tests pass?'
        required: false
        type: boolean
        default: false

jobs:
  integrate:
    name: Create Integration Branch
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리 필요

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Run Integration Script
        run: |
          chmod +x ./scripts/integrate_and_test.sh
          ./scripts/integrate_and_test.sh ${{ github.event.inputs.parent_issue_id }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Integration Tests
        run: |
          python -m py_compile app.py
          python -m py_compile email_utils.py
          python -m py_compile calendar_utils.py

          if [ -d "tests" ] || ls test_*.py 2>/dev/null | grep -q .; then
            pytest --cov=. --cov-report=term
          else
            echo "✅ No test files found, syntax check passed"
          fi

      - name: Push Integration Branch
        run: |
          git push origin integration-${{ github.event.inputs.parent_issue_id }}

  merge_to_main:
    name: Merge to Main
    runs-on: ubuntu-latest
    needs: integrate
    if: github.event.inputs.auto_merge_to_main == 'true'
    environment: production  # 수동 승인 필요한 환경

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: Run Merge Script
        run: |
          chmod +x ./scripts/merge_features.sh
          ./scripts/merge_features.sh ${{ github.event.inputs.parent_issue_id }}

      - name: Push to Main
        run: |
          git push origin main

      - name: Create Release Tag (optional)
        run: |
          TAG="release-${{ github.event.inputs.parent_issue_id }}-$(date +%Y%m%d-%H%M%S)"
          git tag -a "$TAG" -m "Release for ${{ github.event.inputs.parent_issue_id }}"
          git push origin "$TAG"
